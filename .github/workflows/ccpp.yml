---
name: Build CI

on:  # yamllint disable-line rule:truthy
  push:
  pull_request:
  pull_request_review:
    types: [submitted]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Ubuntu gcc",
            enabled: 1,
            os: ubuntu-latest,
            update: "sudo apt-get update",
            deps1: "sudo apt-get install zlib1g-dev libmxml-dev libfftw3-dev dssi-dev libfltk1.3-dev fluid libxpm-dev",
            deps2: "sudo apt-get install liblo-dev",
            testdeps: "sudo apt-get install ruby",
            config: "cd build && cmake ..",
            configext: "cd build && cmake -DCompileExtensiveTests=ON ..",
            build: "cd build && make",
            test: "cd build && make test CTEST_OUTPUT_ON_FAILURE=1"
          }
    steps:
      - name: check out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: update_apt
        run: ${{ matrix.config.update }}
      - name: install_deps1
        run: ${{ matrix.config.deps1 }}
      - name: install_deps2
        run: ${{ matrix.config.deps2 }}
      - name: install_test_deps1
        run: ${{ matrix.config.testdeps }}
      - name: submodule
        run: git submodule update --init
      - name: create_builddir
        run: mkdir build
      - name: configure
        run: ${{ matrix.config.config }}
      - name: configure-extensive
        if: (github.event_name == 'pull_request_review' && github.event.action == 'submitted') || ( github.ref == 'refs/heads/master' )
        run: ${{ matrix.config.configext }}
      - name: make
        run: ${{ matrix.config.build }}
      - name: make test
        run: ${{ matrix.config.test }}

#  build_arch_linux_system_rtosc:
#    runs-on: ubuntu-latest
#    container:
#      image: archlinux:latest
#    steps:
#      - name: Install dependencies
#        run: pacman --noconfirm -Syu alsa-lib base-devel cmake cxxtest dssi fftw fltk git jack ladspa liblo libxpm mxml portaudio rtosc zlib
#      - uses: actions/checkout@v2
#        with:
#          submodules: recursive
#      # test does not seem to work in a container and reports:
#      # Process not started
#      #  /__w/zynaddsubfx/zynaddsubfx/build/src/Tests/check-ports.rb
#      # [no such file or directory]
#      - name: Disable PortChecker test
#        run: sed -e '/add_test(PortChecker/d' -i src/Tests/CMakeLists.txt
#      - name: Build zynaddsubfx
#        run: |
#          cmake -DCMAKE_INSTALL_PREFIX=/usr -DZYN_SYSTEM_RTOSC=ON -B build -S .
#          make VERBOSE=1 -C build
#      - name: Test zynaddsubfx
#        run: make VERBOSE=1 -k test ARGS='-VVd' -C build
#      - name: Install zynaddsubfx
#        run: make VERBOSE=1 install -C build
